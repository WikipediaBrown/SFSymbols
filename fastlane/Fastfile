# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane

# Uncomment the line if you don't want to share usage statistics with fastlane
# opt_out_usage 

require 'fileutils'


default_platform(:ios)

project_name = "SFSymbols"
repository_name = "WikipediaBrown/SFSymbols"
version = "0.1.0"

platform :ios do

  before_all do
    FileUtils.remove_dir './CodeCoverage', true
    FileUtils.remove_dir './UnitTests', true
  end

  after_all do
    FileUtils.remove_dir "./../#{project_name}.xcodeproj", true
  end

  desc "Create Release for GitHub"
  lane :release_to_github do
    create_tag
    changelog_from_git_commits(
      date_format: "short",
      merge_commit_filtering: "exclude_merges",
      pretty: "- (%ae) %s"
    )
    github_release = set_github_release(
      repository_name: ENV["REPOSITORY_NAME"],
      api_bearer: ENV["GITHUB_TOKEN"],
      name: "Super New actions",
      tag_name: version,
      description: (File.read("changelog") rescue "No changelog provided"),
      # upload_assets: ["example_integration.ipa", "./pkg/built.gem"]
    )
  end

  desc "Create tag with version written in file"
  lane :create_tag do
    add_git_tag(tag: "#{version}", message: "poop")
    push_git_tags
    # push_to_git_remote(tags: true, remote_branch: "refs/tags/#{version}")
  end

  desc "Run Unit Tests"
  lane :unit_test do
    spm(
        command: 'generate-xcodeproj',
        enable_code_coverage: true
    )
    run_tests(
              project: "#{project_name}.xcodeproj",
              scheme: "#{project_name}-Package",
              device: 'iPhone 12',
              output_directory: './fastlane/UnitTests',
              output_types: 'html',
              clean: true
    )
    xcov(
          project: "#{project_name}.xcodeproj",
          scheme: "#{project_name}-Package",
          output_directory: './fastlane/CodeCoverage',
          include_targets: "#{project_name}.framework",
          minimum_coverage_percentage: 50.0
    )
  end
  
end
